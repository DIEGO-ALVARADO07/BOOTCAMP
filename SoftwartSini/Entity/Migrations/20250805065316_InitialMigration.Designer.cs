// <auto-generated />
using Entity.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250805065316_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Model.Game.Avatar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Avatars");
                });

            modelBuilder.Entity("Entity.Model.Game.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdMazo")
                        .HasColumnType("int");

                    b.Property<int>("endurence")
                        .HasColumnType("int");

                    b.Property<int>("force")
                        .HasColumnType("int");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("intelligence")
                        .HasColumnType("int");

                    b.Property<string>("nameCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("power")
                        .HasColumnType("int");

                    b.Property<int>("speed")
                        .HasColumnType("int");

                    b.Property<int>("technique")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMazo");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("Entity.Model.Game.Departure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ModeGame")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantityRound")
                        .HasColumnType("int");

                    b.Property<int>("quantityUser")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Departures");
                });

            modelBuilder.Entity("Entity.Model.Game.Mazo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdDeparture")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDeparture");

                    b.ToTable("Mazos");
                });

            modelBuilder.Entity("Entity.Model.Game.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdDeparture")
                        .HasColumnType("int");

                    b.Property<int>("ponits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDeparture");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("Entity.Model.Game.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdDeparture")
                        .HasColumnType("int");

                    b.Property<string>("user")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDeparture");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entity.Model.Game.Avatar", b =>
                {
                    b.HasOne("Entity.Model.Game.User", "User")
                        .WithMany("Avatar")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Model.Game.Card", b =>
                {
                    b.HasOne("Entity.Model.Game.Mazo", "Mazo")
                        .WithMany("Cards")
                        .HasForeignKey("IdMazo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mazo");
                });

            modelBuilder.Entity("Entity.Model.Game.Mazo", b =>
                {
                    b.HasOne("Entity.Model.Game.Departure", "Departure")
                        .WithMany("Mazos")
                        .HasForeignKey("IdDeparture")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departure");
                });

            modelBuilder.Entity("Entity.Model.Game.Round", b =>
                {
                    b.HasOne("Entity.Model.Game.Departure", "Departure")
                        .WithMany("Rounds")
                        .HasForeignKey("IdDeparture")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departure");
                });

            modelBuilder.Entity("Entity.Model.Game.User", b =>
                {
                    b.HasOne("Entity.Model.Game.Departure", "Departure")
                        .WithMany("Users")
                        .HasForeignKey("IdDeparture")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departure");
                });

            modelBuilder.Entity("Entity.Model.Game.Departure", b =>
                {
                    b.Navigation("Mazos");

                    b.Navigation("Rounds");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Entity.Model.Game.Mazo", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("Entity.Model.Game.User", b =>
                {
                    b.Navigation("Avatar");
                });
#pragma warning restore 612, 618
        }
    }
}
